---
{{- $allNamespaces := .Values.kubetorchConfig.deployment_namespaces | default list }}
{{- if not (has .Release.Namespace $allNamespaces) }}
  {{- $allNamespaces = append $allNamespaces .Release.Namespace }}
{{- end }}
{{- range $allNamespaces }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubetorch-service-account
  namespace: {{ . }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kubetorch-minimal-role
  namespace: {{ . }}
  labels:
    "kubetorch.com/namespace": {{ . }}
rules:
- apiGroups: ["serving.knative.dev"]
  resources: ["services", "routes", "configurations", "revisions"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
- apiGroups: [""]
  resources: ["namespaces", "persistentvolumes", "pods", "pods/exec", "pods/log", "services"]
  verbs: ["get", "list", "watch", "create", "delete", "patch", "update"]
- apiGroups: [""]  # For checking if rsync service is ready
  resources: ["endpoints"]
  verbs: ["get"]
- apiGroups: [""]  # For confirming service account exists
  resources: ["serviceaccounts"]
  verbs: ["get"]
- apiGroups: [""]
  resources: ["nodes", "events"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "update", "patch", "create"]
- apiGroups: ["apps"]
  resources: ["deployments", "deployments/status", "replicasets", "statefulsets"]
  verbs: ["get", "list", "watch", "create", "delete", "patch", "update"]
- apiGroups: ["node.k8s.io"]  # for runtimeclasses
  resources: ["runtimeclasses"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["ray.io"]
  resources: ["rayclusters"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubetorch-minimal-role-kubetorch-service-account-binding
  namespace: {{ . }}
  labels:
    "kubetorch.com/service-account": kubetorch-service-account
    "kubetorch.com/namespace": {{ . }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubetorch-minimal-role
subjects:
  - kind: ServiceAccount
    name: kubetorch-service-account
    namespace: {{ . }}
---
{{- end }}

# Read the kubetorch-config configmap
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kubetorch-configmap-reader
  namespace: {{ .Release.Namespace }}
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  resourceNames: ["kubetorch-config"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubetorch-configmap-reader-kubetorch-service-account-binding
  namespace: {{ $.Release.Namespace }}
  labels:
    "kubetorch.com/service-account": kubetorch-service-account
    "kubetorch.com/namespace": {{ $.Release.Namespace }}
roleRef:
  kind: Role
  name: kubetorch-configmap-reader
  apiGroup: rbac.authorization.k8s.io
subjects:
  {{- range $allNamespaces }}
  - kind: ServiceAccount
    name: kubetorch-service-account
    namespace: {{ . }}
  {{- end }}
# Role in kubetorch namespace to allow cross-namespace pods to access services
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kubetorch-core-service-reader
  namespace: {{ $.Release.Namespace }}
rules:
- apiGroups: [""]
  resources: ["services", "endpoints", "pods"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubetorch-core-service-reader-binding
  namespace: {{ $.Release.Namespace }}
  labels:
    "kubetorch.com/service-account": kubetorch-service-account
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubetorch-core-service-reader
subjects:
  {{- range $allNamespaces }}
  - kind: ServiceAccount
    name: kubetorch-service-account
    namespace: {{ . }}
  {{- end }}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ $.Release.Namespace }}-tokenreview-creator
rules:
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ $.Release.Namespace }}-tokenreview-creator-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ $.Release.Namespace }}-tokenreview-creator
subjects:
  {{- range $allNamespaces }}
  - kind: ServiceAccount
    name: kubetorch-service-account
    namespace: {{ . }}
  {{- end }}
