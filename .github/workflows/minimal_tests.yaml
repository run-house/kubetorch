name: Minimal tests

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'python_client/kubetorch/docs/**'
      - 'python_client/tests/test_deploy.py'
      - '**/*.md'
      - '**/*.rst'
      - '**/*.tf'
      - 'exploratory/**'
      - 'cluster_setup/**'
      - '.github/workflows/create_cluster.yaml'
      - '.github/workflows/deploy_tests.yaml'
      - '.github/workflows/create_cluster/action.yaml'
      - '.github/workflows/delete_cluster.yaml'

  pull_request:
    paths-ignore:
      - 'python_client/kubetorch/docs/**'
      - 'python_client/tests/test_deploy.py'
      - '**/*.md'
      - '**/*.rst'
      - '**/*.tf'
      - 'exploratory/**'
      - 'cluster_setup/**'
      - '.github/workflows/create_cluster.yaml'
      - '.github/workflows/deploy_tests.yaml'
      - '.github/workflows/create_cluster/action.yaml'
      - '.github/workflows/delete_cluster.yaml'
  workflow_dispatch:

env:
  CI: true
  KUBETORCH_IGNORE_VERSION_MISMATCH: 1

jobs:
  base-minimal-tests:
    concurrency:
      group: cpu-${{ github.ref }}
      cancel-in-progress: true
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install Dependencies
        uses: ./.github/workflows/install_dependencies

      - name: Setup authentications
        uses: ./.github/workflows/gke_authentications
        with:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_SA_KEY: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Setup Test Cluster
        uses: ./.github/workflows/setup_test_cluster
        with:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials ${{ secrets.CI_CLUSTER_NAME }} \
            --region ${{ secrets.CI_CLUSTER_REGION }} \
            --project ${{ secrets.GCP_PROJECT_ID }}

      - name: Set Python Source Root
        run: echo "PYTHONPATH=$(pwd)/python_client" >> $GITHUB_ENV

      - name: Set Test Hash
        run: |
          TEST_HASH="t-$(echo $GITHUB_SHA | cut -c1-5)-minimal"
          echo "TEST_HASH=$TEST_HASH" >> $GITHUB_ENV
          echo "Using test hash $TEST_HASH"

      - name: Run base minimal tests
        run: |
          cd python_client
          pytest -v --durations=100 --level minimal -m "not gpu_test" -k "not distributed and not monitoring and not cli and not deploy" --ignore=tests/test_deployment_fixtures.py --ignore=tests/test_pod_from_pod.py --ignore=tests/test_python_path.py --ignore=tests/test_queueing.py --ignore=tests/test_secret.py --ignore=tests/test_declarative.py --ignore=tests/test_app.py
        timeout-minutes: 60
        env:
          KT_STREAM_LOGS: false

  cli-tests:
    concurrency:
      group: cli-${{ github.ref }}
      cancel-in-progress: true
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install Dependencies
        uses: ./.github/workflows/install_dependencies

      - name: Setup authentications
        uses: ./.github/workflows/gke_authentications
        with:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_SA_KEY: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Setup Test Cluster
        uses: ./.github/workflows/setup_test_cluster
        with:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials ${{ secrets.CI_CLUSTER_NAME }} \
            --region ${{ secrets.CI_CLUSTER_REGION }} \
            --project ${{ secrets.GCP_PROJECT_ID }}

      - name: Set Python Source Root
        run: echo "PYTHONPATH=$(pwd)/python_client" >> $GITHUB_ENV

      - name: Set Test Hash
        run: |
          TEST_HASH="t-$(echo $GITHUB_SHA | cut -c1-5)-cli"
          echo "TEST_HASH=$TEST_HASH" >> $GITHUB_ENV
          echo "Using test hash $TEST_HASH"

      - name: Run cli tests
        run: |
          cd python_client
          pytest tests/test_cli.py -v --level minimal -m "not gpu_test"
        timeout-minutes: 60
        env:
          KT_STREAM_LOGS: false

  monitoring-tests:
    concurrency:
      group: monitoring-${{ github.ref }}
      cancel-in-progress: true
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install Dependencies
        uses: ./.github/workflows/install_dependencies

      - name: Setup authentications
        uses: ./.github/workflows/gke_authentications
        with:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_SA_KEY: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Setup Test Cluster
        uses: ./.github/workflows/setup_test_cluster
        with:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials ${{ secrets.CI_CLUSTER_NAME }} \
            --region ${{ secrets.CI_CLUSTER_REGION }} \
            --project ${{ secrets.GCP_PROJECT_ID }}

      - name: Set Test Hash
        run: |
          TEST_HASH="t-$(echo $GITHUB_SHA | cut -c1-5)-mon"
          echo "TEST_HASH=$TEST_HASH" >> $GITHUB_ENV
          echo "Using test hash $TEST_HASH"

      - name: Set Python Source Root
        run: echo "PYTHONPATH=$(pwd)/python_client" >> $GITHUB_ENV

      - name: Run monitoring tests
        run: |
          cd python_client
          pytest -v --durations=25 --level minimal -k "monitoring"
        timeout-minutes: 60
        env:
          KT_STREAM_LOGS: true

  pod-from-pod-tests:
    concurrency:
      group: pod-from-pod-${{ github.ref }}
      cancel-in-progress: true
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install Dependencies
        uses: ./.github/workflows/install_dependencies

      - name: Setup authentications
        uses: ./.github/workflows/gke_authentications
        with:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_SA_KEY: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Setup Test Cluster
        uses: ./.github/workflows/setup_test_cluster
        with:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials ${{ secrets.CI_CLUSTER_NAME }} \
            --region ${{ secrets.CI_CLUSTER_REGION }} \
            --project ${{ secrets.GCP_PROJECT_ID }}

      - name: Set Python Source Root
        run: echo "PYTHONPATH=$(pwd)/python_client" >> $GITHUB_ENV

      - name: Set Test Hash
        run: |
          TEST_HASH="t-$(echo $GITHUB_SHA | cut -c1-5)-pod"
          echo "TEST_HASH=$TEST_HASH" >> $GITHUB_ENV

      - name: Run pod-from-pod tests
        run: |
          cd python_client
          pytest -v tests/test_pod_from_pod.py --durations=25 --level minimal -m "not gpu_test"
        timeout-minutes: 60
        env:
          KT_STREAM_LOGS: false

  distributed-tests:
    concurrency:
      group: distributed-${{ github.ref }}
      cancel-in-progress: true
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install Dependencies
        uses: ./.github/workflows/install_dependencies

      - name: Install Ray
        run: |
          uv pip install --system ray

      - name: Setup authentications
        uses: ./.github/workflows/gke_authentications
        with:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_SA_KEY: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Setup Test Cluster
        uses: ./.github/workflows/setup_test_cluster
        with:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials ${{ secrets.CI_CLUSTER_NAME }} \
            --region ${{ secrets.CI_CLUSTER_REGION }} \
            --project ${{ secrets.GCP_PROJECT_ID }}

      - name: Set Python Source Root
        run: echo "PYTHONPATH=$(pwd)/python_client" >> $GITHUB_ENV

      - name: Set Test Hash
        run: |
          TEST_HASH="t-$(echo $GITHUB_SHA | cut -c1-5)-dist"
          echo "TEST_HASH=$TEST_HASH" >> $GITHUB_ENV

      - name: Run distributed tests
        run: |
          cd python_client
          pytest -v tests/test_distributed.py --durations=25 --level minimal -m "not gpu_test"
        timeout-minutes: 60
        env:
          KT_STREAM_LOGS: true

  python-path-tests:
    concurrency:
      group: python-path-${{ github.ref }}
      cancel-in-progress: true
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install Dependencies
        uses: ./.github/workflows/install_dependencies

      - name: Setup authentications
        uses: ./.github/workflows/gke_authentications
        with:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_SA_KEY: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Setup Test Cluster
        uses: ./.github/workflows/setup_test_cluster
        with:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials ${{ secrets.CI_CLUSTER_NAME }} \
            --region ${{ secrets.CI_CLUSTER_REGION }} \
            --project ${{ secrets.GCP_PROJECT_ID }}

      - name: Set Python Source Root
        run: echo "PYTHONPATH=$(pwd)/python_client" >> $GITHUB_ENV

      - name: Set Test Hash
        run: |
          TEST_HASH="t-$(echo $GITHUB_SHA | cut -c1-5)-python"
          echo "TEST_HASH=$TEST_HASH" >> $GITHUB_ENV

      - name: Run python-path tests
        run: |
          cd python_client
          pytest -v tests/test_python_path.py --durations=25 --level minimal -m "not gpu_test"
        timeout-minutes: 60
        env:
          KT_STREAM_LOGS: false

  queue-tests:
    concurrency:
      group: queue-${{ github.ref }}
      cancel-in-progress: true
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install Dependencies
        uses: ./.github/workflows/install_dependencies

      - name: Setup authentications
        uses: ./.github/workflows/gke_authentications
        with:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_SA_KEY: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Setup Test Cluster
        uses: ./.github/workflows/setup_test_cluster
        with:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials ${{ secrets.CI_CLUSTER_NAME }} \
            --region ${{ secrets.CI_CLUSTER_REGION }} \
            --project ${{ secrets.GCP_PROJECT_ID }}

      - name: Set Python Source Root
        run: echo "PYTHONPATH=$(pwd)/python_client" >> $GITHUB_ENV

      - name: Set Test Hash
        run: |
          TEST_HASH="t-$(echo $GITHUB_SHA | cut -c1-5)-queue"
          echo "TEST_HASH=$TEST_HASH" >> $GITHUB_ENV

      - name: Run queue tests
        run: |
          cd python_client
          pytest -v tests/test_queueing.py --durations=25 --level minimal -m "not gpu_test"
        timeout-minutes: 60
        env:
          KT_STREAM_LOGS: false

  secret-tests:
    concurrency:
      group: secret-${{ github.ref }}
      cancel-in-progress: true
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install Dependencies
        uses: ./.github/workflows/install_dependencies

      - name: Setup authentications
        uses: ./.github/workflows/gke_authentications
        with:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_SA_KEY: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Setup Test Cluster
        uses: ./.github/workflows/setup_test_cluster
        with:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials ${{ secrets.CI_CLUSTER_NAME }} \
            --region ${{ secrets.CI_CLUSTER_REGION }} \
            --project ${{ secrets.GCP_PROJECT_ID }}

      - name: Set Python Source Root
        run: echo "PYTHONPATH=$(pwd)/python_client" >> $GITHUB_ENV

      - name: Set Test Hash
        run: |
          TEST_HASH="t-$(echo $GITHUB_SHA | cut -c1-5)-secret"
          echo "TEST_HASH=$TEST_HASH" >> $GITHUB_ENV

      - name: Run secret tests
        run: |
          cd python_client
          pytest -v tests/test_secret.py --durations=25 --level minimal -m "not gpu_test"
        timeout-minutes: 60
        env:
          KT_STREAM_LOGS: false

  declarative-tests:
    concurrency:
      group: declarative-${{ github.ref }}
      cancel-in-progress: true
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install Dependencies
        uses: ./.github/workflows/install_dependencies

      - name: Setup authentications
        uses: ./.github/workflows/gke_authentications
        with:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_SA_KEY: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Setup Test Cluster
        uses: ./.github/workflows/setup_test_cluster
        with:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials ${{ secrets.CI_CLUSTER_NAME }} \
            --region ${{ secrets.CI_CLUSTER_REGION }} \
            --project ${{ secrets.GCP_PROJECT_ID }}

      - name: Set Python Source Root
        run: echo "PYTHONPATH=$(pwd)/python_client" >> $GITHUB_ENV

      - name: Set Test Hash
        run: |
          TEST_HASH="t-$(echo $GITHUB_SHA | cut -c1-5)-declarative"
          echo "TEST_HASH=$TEST_HASH" >> $GITHUB_ENV

      - name: Run declarative tests
        run: |
          cd python_client
          pytest -v tests/test_declarative.py --durations=100 --level minimal -m "not gpu_test"
        timeout-minutes: 60
        env:
          KT_STREAM_LOGS: false

  app-tests:
    concurrency:
      group: app-${{ github.ref }}
      cancel-in-progress: true
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install Dependencies
        uses: ./.github/workflows/install_dependencies

      - name: Setup authentications
        uses: ./.github/workflows/gke_authentications
        with:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_SA_KEY: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Setup Test Cluster
        uses: ./.github/workflows/setup_test_cluster
        with:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials ${{ secrets.CI_CLUSTER_NAME }} \
            --region ${{ secrets.CI_CLUSTER_REGION }} \
            --project ${{ secrets.GCP_PROJECT_ID }}

      - name: Set Python Source Root
        run: echo "PYTHONPATH=$(pwd)/python_client" >> $GITHUB_ENV

      - name: Set Test Hash
        run: |
          TEST_HASH="t-$(echo $GITHUB_SHA | cut -c1-5)-app"
          echo "TEST_HASH=$TEST_HASH" >> $GITHUB_ENV

      - name: Run app tests
        run: |
          cd python_client
          pytest -v tests/test_app.py --durations=100 --level minimal -m "not gpu_test"
        timeout-minutes: 60
        env:
          KT_STREAM_LOGS: false
  cleanup:
    if: ${{ always() }}
    needs: [base-minimal-tests, cli-tests, distributed-tests, monitoring-tests, pod-from-pod-tests, python-path-tests, queue-tests, secret-tests, declarative-tests, app-tests]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3

      - name: Install Dependencies
        uses: ./.github/workflows/install_dependencies

      - name: Setup authentications
        uses: ./.github/workflows/gke_authentications
        with:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_SA_KEY: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Setup Test Cluster
        uses: ./.github/workflows/setup_test_cluster
        with:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials ${{ secrets.CI_CLUSTER_NAME }} \
            --region ${{ secrets.CI_CLUSTER_REGION }} \
            --project ${{ secrets.GCP_PROJECT_ID }}

      - name: Set Test Hash
        run: |
          TEST_HASH="t-$(echo $GITHUB_SHA | cut -c1-5)"
          echo "TEST_HASH=$TEST_HASH" >> $GITHUB_ENV
          echo "Using test hash $TEST_HASH"

      - name: Run Teardown Commands
        run: |
          for suffix in -minimal -mon -cli -pod -dist -python -queue -secret -declarative -app; do
            echo "Running teardown command: kt teardown --prefix ${TEST_HASH}${suffix} --force"
            kt teardown --prefix ${TEST_HASH}${suffix} --force || true
            echo "Running teardown command: kt teardown --prefix ${TEST_HASH}${suffix} --namespace test-${TEST_HASH}${suffix} --force"
            kt teardown --prefix ${TEST_HASH}${suffix} --namespace test-${TEST_HASH}${suffix} --force || true
          done
          kt config set username ${TEST_HASH}-secret
          kt secrets delete -A -y
