name: Push to ECR

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  push_to_ecr:
    name: Build and Push Image
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Set the environment
        id: set-image-tag
        run: |

          BRANCH_NAME=${GITHUB_REF##*/}  # Extracts the branch name from $GITHUB_REF
          if [[ $BRANCH_NAME != 'main' ]]; then
            # Build a dev image for pull requests
            IMAGE_TAG=rh-all-${BRANCH_NAME}-${GITHUB_SHA::8}
          else
            # Build a image for main branch pushes
            IMAGE_TAG=rh-all-main-${GITHUB_SHA::8}
          fi
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "GITHUB_REF=$GITHUB_REF" >> $GITHUB_ENV

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: public.ecr.aws/a9j3d7s3
          ECR_REPOSITORY: run-house/runhouse
        run: |
          docker build --platform linux/amd64 -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f ./docker/slim . --build-arg RUNHOUSE_EXTRAS=all --build-arg BRANCH_NAME=$BRANCH_NAME
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
