name: Setup Release Testing

description: Reusable steps for prepping release testing

inputs:
  AWS_OSS_ROLE_ARN:
    description: 'AWS OSS Role ARN'
    required: false
  GCP_SERVICE_ACCOUNT_KEY:
    description: 'GCP Service Account Key'
    required: false
  GCP_PROJECT_ID:
    description: 'GCP Project ID'
    required: false
  KUBECONFIG:
    description: 'Kubeconfig'
    required: false
  CI_ACCOUNT_TOKEN:
    description: 'CI Token'
    required: true
  CI_ACCOUNT_USERNAME:
    description: 'CI Username'
    required: true
  API_SERVER_URL:
    description: 'API Server URL'
    required: true

runs:
  using: composite
  steps:
    - name: Check out repository code
      uses: actions/checkout@v3

    - name: Configure & Authenticate to AWS
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ inputs.AWS_OSS_ROLE_ARN }}
        aws-region: us-east-1

    - name: Write AWS credentials to file
      run: |
        mkdir -p ~/.aws
        echo "[default]" > ~/.aws/credentials
        echo "aws_access_key_id=$AWS_ACCESS_KEY_ID" >> ~/.aws/credentials
        echo "aws_secret_access_key=$AWS_SECRET_ACCESS_KEY" >> ~/.aws/credentials
        echo "aws_session_token=$AWS_SESSION_TOKEN" >> ~/.aws/credentials
      shell: bash

    - name: Verify AWS credentials
      run: |
        aws sts get-caller-identity
      shell: bash

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ inputs.GCP_SERVICE_ACCOUNT_KEY }}
        project_id: ${{ inputs.GCP_PROJECT_ID }}

    - name: Install Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ inputs.GCP_PROJECT_ID }}
        service_account_key: ${{ inputs.GCP_SERVICE_ACCOUNT_KEY }}

    - name: Setup Kubeconfig
      run: |
        mkdir -p $HOME/.kube
        echo "${{ inputs.KUBECONFIG }}" > $HOME/.kube/config
        sudo apt-get update
        sudo apt-get install -y socat netcat
      shell: bash

    - name: Install & check skypilot configuration
      run: |
        python -m pip install --upgrade pip
        pip install skypilot[aws,gcp,kubernetes]
        sky check
        sky status
      shell: bash

    - name: Install python packages & dependencies
      run: |
        pip install runhouse[aws,gcp,kubernetes]
        pip install -r tests/requirements.txt scipy pyarrow
      shell: bash

    - name: Setup Runhouse
      uses: ./.github/workflows/setup_runhouse

    - name: Setup ~/.rh/config.yaml
      uses: ./.github/workflows/setup_rh_config
      with:
        username: ${{ inputs.CI_ACCOUNT_USERNAME }}
        token: ${{ inputs.CI_ACCOUNT_TOKEN }}
        api_server_url: ${{ inputs.API_SERVER_URL }}
